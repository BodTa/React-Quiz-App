{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taner\\\\Desktop\\\\Dosyalar\\\\React-Project\\\\quiz-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Quiz from \"./Components/Quiz.js\";\nimport IntroPage from \"./Components/IntroPage.js\";\nimport { nanoid } from \"nanoid\";\nimport { shuffle } from \"./helperFunctions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [quizData, setQuizData] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [count, setCount] = useState(0);\n\n  function getQuestions() {\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(res => res.json()).then(data => setQuizData(data.results.map(question => {\n      const questionId = nanoid();\n      const allAnswers = question.incorrect_answers.concat(question.correct_answer);\n      const newAnswers = allAnswers.map(answer => ({\n        answer: answer,\n        answerId: nanoid(),\n        isSelected: false\n      }));\n      return {\n        correctAnswer: question.correct_answer,\n        question: question.question,\n        answers: shuffle(newAnswers),\n        questionId: questionId\n      };\n    })));\n    setIsLoaded(true);\n  }\n\n  function selectAnswer(quiz, event) {\n    const quizData = quiz.answers.map(answer => ({ ...answer,\n      isSelected: answer.answerId === event.target.id ? !answer.isSelected : false\n    }));\n    setQuizData(oldQuizData => {\n      const newQuizData = oldQuizData.map(question => {\n        return quiz.questionId === question.questionId ? { ...quiz,\n          answers: quizData\n        } : question;\n      });\n      return newQuizData;\n    });\n  }\n\n  function question() {\n    return quizData.map(quiz => {\n      return /*#__PURE__*/_jsxDEV(Quiz, {\n        question: quiz.question,\n        answers: quiz.answers,\n        correctAnswer: quiz.correctAnswer,\n        handleClick: event => selectAnswer(quiz, event),\n        isCompleted: isCompleted\n      }, quiz.questionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this);\n    });\n  }\n\n  function setCompleted() {\n    let correctCount = 0;\n    quizData.map(question => {\n      question.answers.map(answer => {\n        if (answer.isSelected && answer.answer === question.correctAnswer) {\n          correctCount = correctCount + 1;\n        }\n      });\n    });\n    setCount(correctCount);\n    setIsCompleted(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      id: \"quiz-container\",\n      children: [!isLoaded && /*#__PURE__*/_jsxDEV(IntroPage, {\n        handleClick: getQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this), isLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizes\",\n        children: question()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: [isLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setCompleted,\n          className: \"submit-btn\",\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), isCompleted && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"You scored \", count, \"/5 correct answer\", count > 1 ? \"s\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"SmYx5ln4EYms00LmMbJ9pLthRsc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Quiz","IntroPage","nanoid","shuffle","App","quizData","setQuizData","isLoaded","setIsLoaded","isCompleted","setIsCompleted","count","setCount","getQuestions","fetch","then","res","json","data","results","map","question","questionId","allAnswers","incorrect_answers","concat","correct_answer","newAnswers","answer","answerId","isSelected","correctAnswer","answers","selectAnswer","quiz","event","target","id","oldQuizData","newQuizData","setCompleted","correctCount"],"sources":["C:/Users/taner/Desktop/Dosyalar/React-Project/quiz-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Quiz from \"./Components/Quiz.js\";\nimport IntroPage from \"./Components/IntroPage.js\";\nimport { nanoid } from \"nanoid\";\nimport { shuffle } from \"./helperFunctions.js\";\nexport default function App() {\n\tconst [quizData, setQuizData] = useState([]);\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\tconst [isCompleted, setIsCompleted] = useState(false);\n\tconst [count, setCount] = useState(0);\n\tfunction getQuestions() {\n\t\tfetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(data =>\n\t\t\t\tsetQuizData(\n\t\t\t\t\tdata.results.map(question => {\n\t\t\t\t\t\tconst questionId = nanoid();\n\t\t\t\t\t\tconst allAnswers = question.incorrect_answers.concat(\n\t\t\t\t\t\t\tquestion.correct_answer\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst newAnswers = allAnswers.map(answer => ({\n\t\t\t\t\t\t\tanswer: answer,\n\t\t\t\t\t\t\tanswerId: nanoid(),\n\t\t\t\t\t\t\tisSelected: false,\n\t\t\t\t\t\t}));\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tcorrectAnswer: question.correct_answer,\n\t\t\t\t\t\t\tquestion: question.question,\n\t\t\t\t\t\t\tanswers: shuffle(newAnswers),\n\t\t\t\t\t\t\tquestionId: questionId,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\tsetIsLoaded(true);\n\t}\n\tfunction selectAnswer(quiz, event) {\n\t\tconst quizData = quiz.answers.map(answer => ({\n\t\t\t...answer,\n\t\t\tisSelected:\n\t\t\t\tanswer.answerId === event.target.id ? !answer.isSelected : false,\n\t\t}));\n\t\tsetQuizData(oldQuizData => {\n\t\t\tconst newQuizData = oldQuizData.map(question => {\n\t\t\t\treturn quiz.questionId === question.questionId\n\t\t\t\t\t? { ...quiz, answers: quizData }\n\t\t\t\t\t: question;\n\t\t\t});\n\t\t\treturn newQuizData;\n\t\t});\n\t}\n\tfunction question() {\n\t\treturn quizData.map(quiz => {\n\t\t\treturn (\n\t\t\t\t<Quiz\n\t\t\t\t\tkey={quiz.questionId}\n\t\t\t\t\tquestion={quiz.question}\n\t\t\t\t\tanswers={quiz.answers}\n\t\t\t\t\tcorrectAnswer={quiz.correctAnswer}\n\t\t\t\t\thandleClick={event => selectAnswer(quiz, event)}\n\t\t\t\t\tisCompleted={isCompleted}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}\n\tfunction setCompleted() {\n\t\tlet correctCount = 0;\n\t\tquizData.map(question => {\n\t\t\tquestion.answers.map(answer => {\n\t\t\t\tif (answer.isSelected && answer.answer === question.correctAnswer) {\n\t\t\t\t\tcorrectCount = correctCount + 1;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tsetCount(correctCount);\n\t\tsetIsCompleted(true);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"quiz-container\" id=\"quiz-container\">\n\t\t\t\t{!isLoaded && <IntroPage handleClick={getQuestions} />}\n\t\t\t\t{isLoaded && <div className=\"quizes\">{question()}</div>}\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t{isLoaded && (\n\t\t\t\t\t\t<button onClick={setCompleted} className=\"submit-btn\">\n\t\t\t\t\t\t\tSUBMIT\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t{isCompleted && (\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\tYou scored {count}/5 correct answer{count > 1 ? \"s\" : \"\"}\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}