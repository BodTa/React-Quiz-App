{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taner\\\\Desktop\\\\Dosyalar\\\\React-Project\\\\quiz-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Quiz from \"./Components/Quiz.js\";\nimport IntroPage from \"./Components/IntroPage.js\";\nimport { nanoid } from \"nanoid\";\nimport { shuffle } from \"./helperFunctions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [quizData, setQuizData] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [check, setCheck] = useState(false);\n  const quizEls = \"\";\n\n  function getQuestions() {\n    setCheck(true);\n    fetch(\"https://opentdb.com/api.php?amount=5&type=multiple\").then(res => res.json()).then(data => setQuizData(data.results.map(question => {\n      const questionId = nanoid();\n      const allAnswers = question.incorrect_answers.concat(question.correct_answer);\n      const newAnswers = allAnswers.map(answer => ({\n        answer: answer,\n        answerId: nanoid(),\n        isSelected: false\n      }));\n      return {\n        correctAnswer: question.correct_answer,\n        question: question.question,\n        answers: shuffle(newAnswers),\n        questionId: questionId\n      };\n    })));\n    setIsLoaded(true);\n  }\n\n  function selectAnswer(quiz, event) {\n    setQuizData(oldQuizData => {\n      oldQuizData.map(question => {\n        const selectedAnswers = question.answers.map(answer => ({ ...answer,\n          isSelected: answer.answerId === event.target.id ? !answer.isSelected : false\n        }));\n        return quiz.questionId === question.questionId ? { ...question,\n          answers: selectedAnswers\n        } : question;\n      });\n    });\n  }\n\n  function question() {\n    return quizData.map(quiz => /*#__PURE__*/_jsxDEV(Quiz, {\n      question: quiz.question,\n      answers: quiz.answers,\n      correctAnswer: quiz.correctAnswer,\n      handleClick: event => selectAnswer(quiz, event)\n    }, quiz.questionId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this));\n  }\n\n  console.log(quizData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      id: \"quiz-container\",\n      children: [!check && /*#__PURE__*/_jsxDEV(IntroPage, {\n        handleClick: getQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this), check && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizes\",\n        children: question()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this), check && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"bEK3ckSAEori/CMI3O+GvEmEld8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Quiz","IntroPage","nanoid","shuffle","App","quizData","setQuizData","isLoaded","setIsLoaded","check","setCheck","quizEls","getQuestions","fetch","then","res","json","data","results","map","question","questionId","allAnswers","incorrect_answers","concat","correct_answer","newAnswers","answer","answerId","isSelected","correctAnswer","answers","selectAnswer","quiz","event","oldQuizData","selectedAnswers","target","id","console","log"],"sources":["C:/Users/taner/Desktop/Dosyalar/React-Project/quiz-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Quiz from \"./Components/Quiz.js\";\nimport IntroPage from \"./Components/IntroPage.js\";\nimport { nanoid } from \"nanoid\";\nimport { shuffle } from \"./helperFunctions.js\";\nexport default function App() {\n\tconst [quizData, setQuizData] = useState([]);\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\tconst [check, setCheck] = useState(false);\n\tconst quizEls = \"\";\n\tfunction getQuestions() {\n\t\tsetCheck(true);\n\t\tfetch(\"https://opentdb.com/api.php?amount=5&type=multiple\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(data =>\n\t\t\t\tsetQuizData(\n\t\t\t\t\tdata.results.map(question => {\n\t\t\t\t\t\tconst questionId = nanoid();\n\t\t\t\t\t\tconst allAnswers = question.incorrect_answers.concat(\n\t\t\t\t\t\t\tquestion.correct_answer\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst newAnswers = allAnswers.map(answer => ({\n\t\t\t\t\t\t\tanswer: answer,\n\t\t\t\t\t\t\tanswerId: nanoid(),\n\t\t\t\t\t\t\tisSelected: false,\n\t\t\t\t\t\t}));\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tcorrectAnswer: question.correct_answer,\n\t\t\t\t\t\t\tquestion: question.question,\n\t\t\t\t\t\t\tanswers: shuffle(newAnswers),\n\t\t\t\t\t\t\tquestionId: questionId,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\tsetIsLoaded(true);\n\t}\n\tfunction selectAnswer(quiz, event) {\n\t\tsetQuizData(oldQuizData => {\n\t\t\toldQuizData.map(question => {\n\t\t\t\tconst selectedAnswers = question.answers.map(answer => ({\n\t\t\t\t\t...answer,\n\t\t\t\t\tisSelected:\n\t\t\t\t\t\tanswer.answerId === event.target.id ? !answer.isSelected : false,\n\t\t\t\t}));\n\t\t\t\treturn quiz.questionId === question.questionId\n\t\t\t\t\t? { ...question, answers: selectedAnswers }\n\t\t\t\t\t: question;\n\t\t\t});\n\t\t});\n\t}\n\tfunction question() {\n\t\treturn quizData.map(quiz => (\n\t\t\t<Quiz\n\t\t\t\tkey={quiz.questionId}\n\t\t\t\tquestion={quiz.question}\n\t\t\t\tanswers={quiz.answers}\n\t\t\t\tcorrectAnswer={quiz.correctAnswer}\n\t\t\t\thandleClick={event => selectAnswer(quiz, event)}\n\t\t\t/>\n\t\t));\n\t}\n\n\tconsole.log(quizData);\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"quiz-container\" id=\"quiz-container\">\n\t\t\t\t{!check && <IntroPage handleClick={getQuestions} />}\n\t\t\t\t{check && <div className=\"quizes\">{question()}</div>}\n\t\t\t\t{check && <button className=\"submit-btn\">SUBMIT</button>}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}